@model MenuVM



<div class="container">
	<div class="row align-items-start">
	<div class="col-4">
			@await Component.InvokeAsync("MenuEkle")
	</div>
	<div class="col-8">
		<div class="container-fluid">
			
			<div class="card shadow">
				<div class="card-header py-3">
					<p class="text-primary m-0 fw-bold">Menü Listesi</p>
				</div>
				<div class="card-body">
					<div class="row">
						<div class="col-md-6 text-nowrap">
							<div class="dataTables_length">
								<label class="form-label">
									Show 
									<select class="d-inline-block form-select form-select-sm" id="pageSizeDropdown" asp-for="@Model.Menuler.PageSize">
										@* onchange="javascript:this.form.submit()" *@
										<option value="10">10</option>
										<option value="25">25</option>
										<option value="50">50</option>
										<option value="100">100</option>
									</select>

								</label>
							</div>
						</div>
						<div class="col-md-6">
							<form asp-action="MenuIndex" method="get">
								<div class="text-md-end">
									<label for="searchText" class="form-label">
										<input name="searchText" class="form-control form-control-sm" type="search" placeholder="Search" value="@(String.IsNullOrEmpty(Context.Request.Query["searchText"]) ?String.Empty: Context.Request.Query["searchText"])" />
									</label>
									<button class="btn btn-light" type="submit">Search</button>
								</div>
							</form>
						</div>
					</div>
					<div class="table-responsive table mt-2">
						<table class="table my-0">
							<thead>
								<tr>
									<th>Menü Adı</th>
									<th class="text-center">Menü Fiyatı</th>
									<th class="text-center">Para Birimi</th>
									<th></th>
									<th></th>
								</tr>
							</thead>
							<tbody>
								@foreach (Menu menu in Model.Menuler)
								{
									<tr>
										<td>@menu.MenuAdi</td>
										<td class="text-center">@menu.MenuFiyati</td>
										<td class="text-center">@menu.ParaBirimi</td>
										<td><a asp-action="MenuDuzenle" asp-route-id="@menu.Id" class="btn btn-warning btn-icon-split" role="button"><span class="text-white-50 icon"><i class="fas fa-exclamation-triangle me-2"></i></span><span class="text-white text">Update</span></a></td>
										<td><a asp-action="MenuSil" asp-route-id="@menu.Id" class="btn btn-danger btn-icon-split" role="button"><span class="text-white-50 icon"><i class="fas fa-trash me-2"></i></span><span class="text-white text">Delete</span></a></td>
									</tr>
								}
							</tbody>
							<tfoot>
								<tr>
									<th>Menü Adı</th>
									<th class="text-center">Menü Fiyatı</th>
									<th class="text-center">Para Birimi</th>
									<th></th>
								</tr>
							</tfoot>
						</table>
					</div>
					<div class="row">
						<div class="col-md-6 align-self-center">
								<p id="dataTable_info" class="dataTables_info" role="status" aria-live="polite">Showing page @(Model.Menuler.PageNumber) to @Model.Menuler.PageCount of @Model.Menuler.TotalItemCount products</p>
						</div>
						<div class="col-md-6">
							<nav class="d-lg-flex justify-content-lg-end dataTables_paginate paging_simple_numbers">
								<ul class="pagination">
										<li class="page-item @(Model.Menuler.HasPreviousPage ? "" : "disabled")">
											<a class="page-link" aria-label="Previous" href="@(Model.Menuler.HasPreviousPage ? Url.Action("MenuIndex", new { page = Model.Menuler.PageNumber - 1 , pageSize=Model.Menuler.PageSize, searchText=Context.Request.Query["searchText"] }) : "#")">
											<span aria-hidden="true">«</span>
										</a>
									</li>
										@for (int i = 1; i <= Model.Menuler.PageCount; i++)
									{
											<li class="page-item @(i == Model.Menuler.PageNumber ? "active" : "")">
												<a class="page-link" href="@Url.Action("MenuIndex", new { page = i, pageSize=Model.Menuler.PageSize,searchText=Context.Request.Query["searchText"] })">@i</a>
										</li>
									}
										<li class="page-item @(Model.Menuler.HasNextPage ? "" : "disabled")">
											<a class="page-link" aria-label="Next" href="@(Model.Menuler.HasNextPage ? Url.Action("MenuIndex", new { page = Model.Menuler.PageNumber + 1, pageSize=Model.Menuler.PageSize,searchText=Context.Request.Query["searchText"] }) : "#")">
											<span aria-hidden="true">»</span>
										</a>
									</li>
								</ul>
							</nav>
						</div>
					</div>

					<a class="btn btn-success" asp-action="MenuEkle">New Product</a>

				</div>
			</div>
		</div>
	</div>
</div>
</div>


<script>
	var dropdown = document.getElementById("pageSizeDropdown");

	dropdown.addEventListener("change", function () {
		var selectedPageSize = this.value;
		var searchText = '@Context.Request.Query["searchText"]';

		if (searchText) {
			var url = "/YonetimPaneli/MenuIndex?pageSize=" + selectedPageSize + "&searchText=" + searchText;
		} else {
			var url = "/YonetimPaneli/MenuIndex?pageSize=" + selectedPageSize;
		}

		window.location.href = url;
	});
</script>


